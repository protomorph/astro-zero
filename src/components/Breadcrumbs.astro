---
interface Props {
  base?: string
  title?: string
  separator?: string
}

type Crumb = {
  end: boolean
  href: string
  title: string
}

const {
  base = 'Home',
  separator = '&gt;',
  title
} = Astro.props as Props

const titlecase = (txt: string) => txt.replace(
  /\w\S*/g, (t) => t.charAt(0).toUpperCase() + t.substring(1).toLowerCase()
)

const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '')
const paths = pathname.split('/').filter(Boolean) || []

const crumbs = [base, ...paths].map((part, i) => ({
  end: paths.length === i,
  href: `/${paths.slice(0, i).join('/')}`,
  title: titlecase(part.replace(/[-_]/g, ' ')),
})) as Crumb[]

const home = crumbs.length === 1

if (Number(crumbs.at(-1)!.title)) {
  const c = crumbs.at(-2) as Crumb
  c.title = title as string
} else {
  const c = crumbs.at(-1) as Crumb
  c.title = title as string
}
---

{! home && (<nav aria-labelledby="breadcrumb-label">
  <h2 class="sr-only" id="breadcrumb-label">Breadcrumbs</h2>
  <ol role="list">
    {crumbs.map(({ end, href, title }) => (
      <li role="listitem">
        <a {href} aria-current={end ? 'page' : undefined}>{title}</a>
        {! end && <span role="separator" set:html={separator} />}
      </li>
    ))}
  </ol>
</nav>)}
